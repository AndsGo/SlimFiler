package httputil

import (
	"net/http"
	"strings"
)

var mimeTypes = map[string]string{
	// 文本类型
	"txt":  "text/plain",
	"html": "text/html",
	"htm":  "text/html",
	"css":  "text/css",
	"js":   "application/javascript",
	"json": "application/json",
	"xml":  "application/xml",
	"csv":  "text/csv",
	"md":   "text/markdown",

	// 图片类型
	"png":  "image/png",
	"jpg":  "image/jpeg",
	"jpeg": "image/jpeg",
	"gif":  "image/gif",
	"bmp":  "image/bmp",
	"webp": "image/webp",
	"ico":  "image/x-icon",
	"svg":  "image/svg+xml",
	"tiff": "image/tiff",

	// 音频类型
	"mp3":  "audio/mpeg",
	"wav":  "audio/wav",
	"ogg":  "audio/ogg",
	"aac":  "audio/aac",
	"flac": "audio/flac",
	"midi": "audio/midi",

	// 视频类型
	"mp4":  "video/mp4",
	"webm": "video/webm",
	"ogv":  "video/ogg",
	"avi":  "video/x-msvideo",
	"mov":  "video/quicktime",
	"wmv":  "video/x-ms-wmv",
	"flv":  "video/x-flv",

	// 文档类型
	"pdf":  "application/pdf",
	"doc":  "application/msword",
	"docx": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
	"xls":  "application/vnd.ms-excel",
	"xlsx": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
	"ppt":  "application/vnd.ms-powerpoint",
	"pptx": "application/vnd.openxmlformats-officedocument.presentationml.presentation",
	"odt":  "application/vnd.oasis.opendocument.text",
	"ods":  "application/vnd.oasis.opendocument.spreadsheet",
	"odp":  "application/vnd.oasis.opendocument.presentation",

	// 压缩文件类型
	"zip": "application/zip",
	"rar": "application/x-rar-compressed",
	"tar": "application/x-tar",
	"gz":  "application/gzip",
	"7z":  "application/x-7z-compressed",

	// 其他类型
	"exe": "application/octet-stream",
	"dmg": "application/octet-stream",
	"bin": "application/octet-stream",
	"deb": "application/x-debian-package",
	"rpm": "application/x-redhat-package-manager",
	"iso": "application/x-iso9660-image",
	"apk": "application/vnd.android.package-archive",

	// 从第二个 map 中添加的条目
	"":        "application/octet-stream",
	"323":     "text/h323",
	"acx":     "application/internet-property-stream",
	"ai":      "application/postscript",
	"aif":     "audio/x-aiff",
	"aifc":    "audio/x-aiff",
	"aiff":    "audio/x-aiff",
	"asf":     "video/x-ms-asf",
	"asr":     "video/x-ms-asf",
	"asx":     "video/x-ms-asf",
	"au":      "audio/basic",
	"axs":     "application/olescript",
	"bas":     "text/plain",
	"bcpio":   "application/x-bcpio",
	"c":       "text/plain",
	"cat":     "application/vnd.ms-pkiseccat",
	"cdf":     "application/x-cdf",
	"cer":     "application/x-x509-ca-cert",
	"class":   "application/octet-stream",
	"clp":     "application/x-msclip",
	"cmx":     "image/x-cmx",
	"cod":     "image/cis-cod",
	"cpio":    "application/x-cpio",
	"crd":     "application/x-mscardfile",
	"crl":     "application/pkix-crl",
	"crt":     "application/x-x509-ca-cert",
	"csh":     "application/x-csh",
	"dcr":     "application/x-director",
	"der":     "application/x-x509-ca-cert",
	"dir":     "application/x-director",
	"dll":     "application/x-msdownload",
	"dms":     "application/octet-stream",
	"dot":     "application/msword",
	"dvi":     "application/x-dvi",
	"dxr":     "application/x-director",
	"eps":     "application/postscript",
	"etx":     "text/x-setext",
	"evy":     "application/envoy",
	"fif":     "application/fractals",
	"flr":     "x-world/x-vrml",
	"gtar":    "application/x-gtar",
	"h":       "text/plain",
	"hdf":     "application/x-hdf",
	"hlp":     "application/winhlp",
	"hqx":     "application/mac-binhex40",
	"hta":     "application/hta",
	"htc":     "text/x-component",
	"htt":     "text/webviewhtml",
	"ief":     "image/ief",
	"iii":     "application/x-iphone",
	"ins":     "application/x-internet-signup",
	"isp":     "application/x-internet-signup",
	"jfif":    "image/pipeg",
	"jpe":     "image/jpeg",
	"latex":   "application/x-latex",
	"lha":     "application/octet-stream",
	"lsf":     "video/x-la-asf",
	"lsx":     "video/x-la-asf",
	"lzh":     "application/octet-stream",
	"m13":     "application/x-msmediaview",
	"m14":     "application/x-msmediaview",
	"m3u":     "audio/x-mpegurl",
	"man":     "application/x-troff-man",
	"mdb":     "application/x-msaccess",
	"me":      "application/x-troff-me",
	"mht":     "message/rfc822",
	"mhtml":   "message/rfc822",
	"mid":     "audio/mid",
	"mny":     "application/x-msmoney",
	"movie":   "video/x-sgi-movie",
	"mp2":     "video/mpeg",
	"mpa":     "video/mpeg",
	"mpe":     "video/mpeg",
	"mpeg":    "video/mpeg",
	"mpg":     "video/mpeg",
	"mpp":     "application/vnd.ms-project",
	"mpv2":    "video/mpeg",
	"ms":      "application/x-troff-ms",
	"mvb":     "application/x-msmediaview",
	"nws":     "message/rfc822",
	"oda":     "application/oda",
	"p10":     "application/pkcs10",
	"p12":     "application/x-pkcs12",
	"p7b":     "application/x-pkcs7-certificates",
	"p7c":     "application/x-pkcs7-mime",
	"p7m":     "application/x-pkcs7-mime",
	"p7r":     "application/x-pkcs7-certreqresp",
	"p7s":     "application/x-pkcs7-signature",
	"pbm":     "image/x-portable-bitmap",
	"pfx":     "application/x-pkcs12",
	"pgm":     "image/x-portable-graymap",
	"pko":     "application/ynd.ms-pkipko",
	"pma":     "application/x-perfmon",
	"pmc":     "application/x-perfmon",
	"pml":     "application/x-perfmon",
	"pmr":     "application/x-perfmon",
	"pmw":     "application/x-perfmon",
	"pnm":     "image/x-portable-anymap",
	"pot":     "application/vnd.ms-powerpoint",
	"ppm":     "image/x-portable-pixmap",
	"pps":     "application/vnd.ms-powerpoint",
	"prf":     "application/pics-rules",
	"ps":      "application/postscript",
	"pub":     "application/x-mspublisher",
	"qt":      "video/quicktime",
	"ra":      "audio/x-pn-realaudio",
	"ram":     "audio/x-pn-realaudio",
	"ras":     "image/x-cmu-raster",
	"rgb":     "image/x-rgb",
	"rmi":     "audio/mid",
	"roff":    "application/x-troff",
	"rtf":     "application/rtf",
	"rtx":     "text/richtext",
	"scd":     "application/x-msschedule",
	"sct":     "text/scriptlet",
	"setpay":  "application/set-payment-initiation",
	"setreg":  "application/set-registration-initiation",
	"sh":      "application/x-sh",
	"shar":    "application/x-shar",
	"sit":     "application/x-stuffit",
	"snd":     "audio/basic",
	"spc":     "application/x-pkcs7-certificates",
	"spl":     "application/futuresplash",
	"src":     "application/x-wais-source",
	"sst":     "application/vnd.ms-pkicertstore",
	"stl":     "application/vnd.ms-pkistl",
	"stm":     "text/html",
	"sv4cpio": "application/x-sv4cpio",
	"sv4crc":  "application/x-sv4crc",
	"swf":     "application/x-shockwave-flash",
	"t":       "application/x-troff",
	"tcl":     "application/x-tcl",
	"tex":     "application/x-tex",
	"texi":    "application/x-texinfo",
	"texinfo": "application/x-texinfo",
	"tgz":     "application/x-compressed",
	"tr":      "application/x-troff",
	"trm":     "application/x-msterminal",
	"tsv":     "text/tab-separated-values",
	"uls":     "text/iuls",
	"ustar":   "application/x-ustar",
	"vcf":     "text/x-vcard",
	"vrml":    "x-world/x-vrml",
	"wcm":     "application/vnd.ms-works",
	"wdb":     "application/vnd.ms-works",
	"wks":     "application/vnd.ms-works",
	"wmf":     "application/x-msmetafile",
	"wps":     "application/vnd.ms-works",
	"wri":     "application/x-mswrite",
	"wrl":     "x-world/x-vrml",
	"wrz":     "x-world/x-vrml",
	"xaf":     "x-world/x-vrml",
	"xbm":     "image/x-xbitmap",
	"xla":     "application/vnd.ms-excel",
	"xlc":     "application/vnd.ms-excel",
	"xlm":     "application/vnd.ms-excel",
	"xlt":     "application/vnd.ms-excel",
	"xlw":     "application/vnd.ms-excel",
	"xof":     "x-world/x-vrml",
	"xpm":     "image/x-xpixmap",
	"xwd":     "image/x-xwindowdump",
	"z":       "application/x-compress",
}

func GetFileType(fileName string) string {
	// 获取fileName后缀
	name := strings.Split(fileName, "?")[0]
	if len(strings.Split(name, ".")) == 1 { // 如果没有后缀，则返回空
		return mimeTypes[""]
	}
	name = strings.Split(name, ".")[len(strings.Split(name, "."))-1]
	if mimeTypes[name] == "" {
		return mimeTypes[""]
	}
	return mimeTypes[name]
}

// 判断url上是否有download参数
func SetDownload(w http.ResponseWriter, r *http.Request, fileName string) bool {
	if r.URL.Query().Get("download") == "1" { // 如果url上带有download=1参数，则认为是下载请求
		w.Header().Set("Content-Disposition", "attachment; filename="+fileName)
		return true
	}
	if strings.Contains(r.URL.Path, "&download=1") || strings.Contains(r.URL.Path, "?download=1") { // 如果url上带有download参数，则认为是下载请求
		w.Header().Set("Content-Disposition", "attachment; filename="+fileName)
		return true
	}
	w.Header().Set("Content-Disposition", "inline; filename="+fileName)
	return false
}
